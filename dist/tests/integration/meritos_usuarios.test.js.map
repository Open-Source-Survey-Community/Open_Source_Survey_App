{"version":3,"sources":["../../../tests/integration/meritos_usuarios.test.js"],"names":["tester","require","describe","self","test","url","contentType","it","done","JSON","stringify","query","variables","idUsuario","then","expect","response","status","toBe","success","data","getCantidadPreguntasElaboradasByUsuario","console","log","getListaPreguntasElaboradasByUsuario","length"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,gBAAR,EAA0BD,MAAzC;;AAEAE,SAAS,yDAAT,EAAoE,YAAW;AAC3E,QAAMC,OAAO,IAAb;AACAA,SAAKC,IAAL,GAAYJ,OAAO;AACfK,aAAK,iCADU;AAEfC,qBAAa;AAFE,KAAP,CAAZ;AAIAC,OAAG,sEAAH,EAA4E,UAAUC,IAAV,EAAgB;AACxFL,aACKC,IADL,CACUK,KAAKC,SAAL,CAAe;AACjBC,iMADiB;AAKjBC,uBAAW;AACPC,2BAAW;AADJ;AALM,SAAf,CADV,EAUKC,IAVL,CAUU,oBAAY;AACdC,mBAAOC,SAASC,MAAhB,EAAwBC,IAAxB,CAA6B,GAA7B;AACAH,mBAAOC,SAASG,OAAhB,EAAyBD,IAAzB,CAA8B,IAA9B;AACAH,mBAAOC,SAASI,IAAT,CAAcC,uCAArB,EAA8DH,IAA9D,CAAmE,CAAnE;AACAV;AACH,SAfL;AAgBH,KAjBD;AAkBAD,OAAG,uEAAH,EAA6E,UAAUC,IAAV,EAAgB;AACzFL,aACKC,IADL,CACUK,KAAKC,SAAL,CAAe;AACjBC,kRADiB;AAQjBC,uBAAW;AACPC,2BAAW;AADJ;AARM,SAAf,CADV,EAaKC,IAbL,CAaU,oBAAY;AACdQ,oBAAQC,GAAR,CAAYP,QAAZ;AACAD,mBAAOC,SAASC,MAAhB,EAAwBC,IAAxB,CAA6B,GAA7B;AACAH,mBAAOC,SAASG,OAAhB,EAAyBD,IAAzB,CAA8B,IAA9B;AACAH,mBAAOC,SAASI,IAAT,CAAcI,oCAAd,CAAmDC,MAA1D,EAAkEP,IAAlE,CAAuE,CAAvE;AACAV;AACH,SAnBL;AAoBH,KArBD;AAsBAD,OAAG,sFAAH,EAA4F,UAAUC,IAAV,EAAgB;AACxGL,aACKC,IADL,CACUK,KAAKC,SAAL,CAAe;AACjBC,+OADiB;AAMjBC,uBAAW;AACPC,2BAAW;AADJ;AANM,SAAf,CADV,EAWKC,IAXL,CAWU,oBAAY;AACdQ,oBAAQC,GAAR,CAAYP,QAAZ;AACAD,mBAAOC,SAASC,MAAhB,EAAwBC,IAAxB,CAA6B,GAA7B;AACAH,mBAAOC,SAASG,OAAhB,EAAyBD,IAAzB,CAA8B,IAA9B;AACAV;AACH,SAhBL;AAiBH,KAlBD;AAmBAD,OAAG,mFAAH,EAAyF,UAAUC,IAAV,EAAgB;AACrGL,aACKC,IADL,CACUK,KAAKC,SAAL,CAAe;AACjBC,oTADiB;AASjBC,uBAAW;AACPC,2BAAW;AADJ;AATM,SAAf,CADV,EAcKC,IAdL,CAcU,oBAAY;AACdQ,oBAAQC,GAAR,CAAYP,QAAZ;AACAD,mBAAOC,SAASC,MAAhB,EAAwBC,IAAxB,CAA6B,GAA7B;AACAH,mBAAOC,SAASG,OAAhB,EAAyBD,IAAzB,CAA8B,IAA9B;AACAV;AACH,SAnBL;AAoBH,KArBD;AAsBAD,OAAG,wEAAH,EAA8E,UAAUC,IAAV,EAAgB;AAC1FL,aACKC,IADL,CACUK,KAAKC,SAAL,CAAe;AACjBC,2NADiB;AAMjBC,uBAAW;AACPC,2BAAW;AADJ;AANM,SAAf,CADV,EAWKC,IAXL,CAWU,oBAAY;AACdQ,oBAAQC,GAAR,CAAYP,QAAZ;AACAD,mBAAOC,SAASC,MAAhB,EAAwBC,IAAxB,CAA6B,GAA7B;AACAH,mBAAOC,SAASG,OAAhB,EAAyBD,IAAzB,CAA8B,IAA9B;AACAV;AACH,SAhBL;AAiBH,KAlBD;AAmBH,CA1GD","file":"meritos_usuarios.test.js","sourcesContent":["const tester = require(\"graphql-tester\").tester;\n\ndescribe(\"Pruebas de cobertura acerca del schema meritos_usuarios\", function (){\n    const self = this;\n    self.test = tester({\n        url: \"http://127.0.0.1:3660/graphtest\",\n        contentType: \"application/json\"\n    });\n    it(\"Deberia poder ver la cantidad de preguntas elaboradas por un usuario\" , function (done) {\n        self\n            .test(JSON.stringify({\n                query: `query getCantidadPreguntasElaboradasByUsuario($idUsuario: String){\n\t\t\t\t\t\t\tgetCantidadPreguntasElaboradasByUsuario(idUsuario:$idUsuario)\n\t\t\t\t\t\t\t\t\n\t\t\t\t}`,\n                variables: {\n                    idUsuario: \"5ac248c98a3f74223f16895e\",\n                }\n            }))\n            .then(response => {\n                expect(response.status).toBe(200);\n                expect(response.success).toBe(true);\n                expect(response.data.getCantidadPreguntasElaboradasByUsuario).toBe(5);\n                done();\n            });\n    });\n    it(\"Deberia poder ver la lista de las preguntas elaboradas por un usuario\" , function (done) {\n        self\n            .test(JSON.stringify({\n                query: `query getListaPreguntasElaboradasByUsuario($idUsuario: String){\n\t\t\t\t\t\t\tgetListaPreguntasElaboradasByUsuario(idUsuario:$idUsuario){\n\t\t\t\t\t\t\t        descripcion\n\t\t\t\t\t\t\t        respuestas\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t}`,\n                variables: {\n                    idUsuario: \"5ac248c98a3f74223f16895e\",\n                }\n            }))\n            .then(response => {\n                console.log(response);\n                expect(response.status).toBe(200);\n                expect(response.success).toBe(true);\n                expect(response.data.getListaPreguntasElaboradasByUsuario.length).toBe(5);\n                done();\n            });\n    });\n    it(\"Deberia poder ver la cantidad de correcciones de preguntas elaboradas por un usuario\" , function (done) {\n        self\n            .test(JSON.stringify({\n                query: `query getCantidadCorreccionesPreguntasElaboradasByUsuario($idUsuario: String){\n\t\t\t\t\t\t\tgetCantidadCorreccionesPreguntasElaboradasByUsuario(idUsuario:$idUsuario)\n\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\n\t\t\t\t}`,\n                variables: {\n                    idUsuario: \"5ac24c758e4a6a23d4869ac7\",\n                }\n            }))\n            .then(response => {\n                console.log(response);\n                expect(response.status).toBe(200);\n                expect(response.success).toBe(true);\n                done();\n            });\n    });\n    it(\"Deberia poder ver la lista de correcciones de preguntas elaboradas por un usuario\" , function (done) {\n        self\n            .test(JSON.stringify({\n                query: `query getListaCorreccionesPreguntasElaboradasByUsuario($idUsuario: String){\n\t\t\t\t\t\t\tgetListaCorreccionesPreguntasElaboradasByUsuario(idUsuario:$idUsuario){\n\t\t\t\t\t\t\t    titulo\n\t\t\t\t\t\t\t    descripcion\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\n\t\t\t\t}`,\n                variables: {\n                    idUsuario: \"5ac24c758e4a6a23d4869ac7\",\n                }\n            }))\n            .then(response => {\n                console.log(response);\n                expect(response.status).toBe(200);\n                expect(response.success).toBe(true);\n                done();\n            });\n    });\n    it(\"Deberia poder ver la cantidad de comentarios elaboradas por un usuario\" , function (done) {\n        self\n            .test(JSON.stringify({\n                query: `query getCantidadComentariosElaboradosByUsuario($idUsuario: String){\n\t\t\t\t\t\t\tgetCantidadComentariosElaboradosByUsuario(idUsuario:$idUsuario)\n\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\n\t\t\t\t}`,\n                variables: {\n                    idUsuario: \"5ade907216edf832bf53692b\",\n                }\n            }))\n            .then(response => {\n                console.log(response);\n                expect(response.status).toBe(200);\n                expect(response.success).toBe(true);\n                done();\n            });\n    });\n});"]}