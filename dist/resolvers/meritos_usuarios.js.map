{"version":3,"sources":["../../resolvers/meritos_usuarios.js"],"names":["Query","getCantidadPreguntasElaboradasByUsuario","parent","args","models","Pregunta","count","idUsuario","then","cantidadPreguntasElaboradas","catch","Error","error","getListaPreguntasElaboradasByUsuario","find","populate","sort","limit","listaPreguntas","getCantidadCorreccionesPreguntasElaboradasByUsuario","discusionPregunta","cantidadDiscusionPreguntasElaboradas","getListaCorreccionesPreguntasElaboradasByUsuario","listadiscusionPreguntas"],"mappings":";;;;;kBAAe;AACXA,WAAM;AACFC,iDAAwC,iDAACC,MAAD,EAASC,IAAT,QAA0B;AAAA,gBAAVC,MAAU,QAAVA,MAAU;;AAC9D,mBAAOA,OAAOC,QAAP,CAAgBC,KAAhB,CAAsB,EAAC,cAAcH,KAAKI,SAApB,EAA8B,kBAAiB,IAA/C,EAAtB,EACFC,IADE,CACG,uCAA8B;AAChC,uBAAOC,2BAAP;AACH,aAHE,EAIFC,KAJE,CAII,iBAAQ;AACZ,sBAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AACF,aANE,CAAP;AAOH,SATC;AAUFC,8CAAsC,8CAACX,MAAD,EAASC,IAAT,SAA0B;AAAA,gBAAVC,MAAU,SAAVA,MAAU;;AACxD,mBAAOA,OAAOC,QAAP,CAAgBS,IAAhB,CAAqB,EAAC,cAAcX,KAAKI,SAApB,EAA8B,kBAAiB,IAA/C,EAArB,EACFQ,QADE,CACO,kBADP,EAEFC,IAFE,CAEG,EAAC,kBAAiB,CAAC,CAAnB,EAFH,EAGFC,KAHE,CAGI,CAHJ,EAIFT,IAJE,CAIG,0BAAiB;AACnB,uBAAOU,cAAP;AACH,aANE,EAMAR,KANA,CAMM,iBAAQ;AACb,sBAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AAEH,aATE,CAAP;AAWP,SAtBC;AAuBFO,6DAAoD,6DAACjB,MAAD,EAASC,IAAT,SAA0B;AAAA,gBAAVC,MAAU,SAAVA,MAAU;;AAC1E,mBAAOA,OAAOgB,iBAAP,CAAyBd,KAAzB,CAA+B,EAAC,sBAAsBH,KAAKI,SAA5B,EAAsC,cAAa,IAAnD,EAA/B,EACFC,IADE,CACG,gDAAuC;AACzC,uBAAOa,oCAAP;AACH,aAHE,EAIFX,KAJE,CAII,iBAAQ;AACX,sBAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AACH,aANE,CAAP;AAOH,SA/BC;AAgCFU,0DAAkD,0DAACpB,MAAD,EAASC,IAAT,SAA0B;AAAA,gBAAVC,MAAU,SAAVA,MAAU;;AACxE,mBAAOA,OAAOgB,iBAAP,CAAyBN,IAAzB,CAA8B,EAAC,sBAAsBX,KAAKI,SAA5B,EAAsC,cAAa,IAAnD,EAA9B,EACFQ,QADE,CACO,wBADP,EAEFC,IAFE,CAEG,EAAC,kBAAiB,CAAC,CAAnB,EAFH,EAGFC,KAHE,CAGI,CAHJ,EAIFT,IAJE,CAIG,mCAA0B;AAC5B,uBAAOe,uBAAP;AACH,aANE,EAMAb,KANA,CAMM,iBAAQ;AACb,sBAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AAEH,aATE,CAAP;AAUH;AA3CC;AADK,C","file":"meritos_usuarios.js","sourcesContent":["export default {\n    Query:{\n        getCantidadPreguntasElaboradasByUsuario:(parent, args, {models})=>{\n            return models.Pregunta.count({\"usuario_ID\": args.idUsuario,\"registroActual\":true})\n                .then(cantidadPreguntasElaboradas =>{\n                    return cantidadPreguntasElaboradas;\n                })\n                .catch(error =>{\n                   throw new Error(error);\n                });\n        },\n        getListaPreguntasElaboradasByUsuario: (parent, args, {models})=>{\n                return models.Pregunta.find({\"usuario_ID\": args.idUsuario,\"registroActual\":true})\n                    .populate(\"areaconocimiento\")\n                    .sort({\"fecha_creacion\":-1})\n                    .limit(5)\n                    .then(listaPreguntas =>{\n                        return listaPreguntas;\n                    }).catch(error =>{\n                        throw new Error(error);\n\n                    });\n\n        },\n        getCantidadCorreccionesPreguntasElaboradasByUsuario:(parent, args, {models})=>{\n            return models.discusionPregunta.count({\"creador_correccion\": args.idUsuario,\"habilitada\":true})\n                .then(cantidadDiscusionPreguntasElaboradas =>{\n                    return cantidadDiscusionPreguntasElaboradas;\n                })\n                .catch(error =>{\n                    throw new Error(error);\n                });\n        },\n        getListaCorreccionesPreguntasElaboradasByUsuario: (parent, args, {models})=>{\n            return models.discusionPregunta.find({\"creador_correccion\": args.idUsuario,\"habilitada\":true})\n                .populate(\"etiquetas_correcciones\")\n                .sort({\"fecha_creacion\":-1})\n                .limit(5)\n                .then(listadiscusionPreguntas =>{\n                    return listadiscusionPreguntas;\n                }).catch(error =>{\n                    throw new Error(error);\n\n                });\n        }\n    }\n};"]}