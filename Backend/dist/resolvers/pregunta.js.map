{"version":3,"sources":["../../resolvers/pregunta.js"],"names":["Query","verMyPreguntaActual","parent","args","models","Pregunta","findOne","_id","idPregunta","registroActual","populate","then","pregunta","catch","error","Error","listadoPreguntasActuales","edgePreguntaArray","cursor","parseInt","Buffer","from","after","toString","edgePreguntaInfoPromise","Promise","resolve","reject","edges","find","identificador","$gt","descripcion","RegExp","word","err","result","limit","on","push","res","node","endCursor","length","NaN","hasNextPage","cursorFinal","where","gt","count","pageInfo","hasnextPage","totalPagesPromise","listPaginatePregunta","all","values","totalCount","verListadoMisPreguntasActuales","idUsuario","usuario_ID","listadoMisPreguntas","verListadoMisPreguntasActualesByEstado","estado","listadoPreguntas","listadoPreguntasActualesByEstado","historialImagenesUsadasByUserinAPregunta","Mutation","crearPregunta","areaconocimiento","existenPreguntasCreadas","objectNewPregunta","save","documento","editarPregunta","findById","preguntaAnterior","imagen","fecha_creacion","tipoPregunta","respuestas","findByIdAndUpdate","$push","historial_cambios","$set","new","documentoActualizado","eliminarPregunta","User","correo","correoUsuario","documentoPregunta","rollbackPreguntaAnterior","idPreguntaAnterior","ownerQuestion","rollbackDescripcionPregunta","rollbackRespuestasPregunta","rollbackImagenPregunta"],"mappings":"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","file":"pregunta.js","sourcesContent":["/* eslint-disable no-unused-vars */\nexport default {\n\tQuery: {\n\t\tverMyPreguntaActual: (parent, args, {models}) => {\n\t\t\treturn models.Pregunta.findOne({_id: args.idPregunta,\n\t\t\t\tregistroActual: true })\n\t\t\t\t.populate(\"usuario_ID\")\n\t\t\t\t.populate(\"areaconocimiento\")\n\t\t\t\t.then(pregunta => {\n\t\t\t\t\treturn pregunta;\n\t\t\t\t}).catch(error=> {\n\t\t\t\t\tif (error){\n\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t},\n\t\tlistadoPreguntasActuales : (parent, args, {models}) => {\n\t\t\tlet edgePreguntaArray = [];\n\t\t\tlet cursor = parseInt(Buffer.from(args.after, \"base64\").toString(\"ascii\"));\n\t\t\tif (!cursor){\n\t\t\t\tcursor = 0;\n\t\t\t}\n\t\t\tlet edgePreguntaInfoPromise = new Promise((resolve, reject)=> {\n\t\t\t\tlet edges = models.Pregunta.find({identificador:{$gt:cursor},registroActual: true,\n\t\t\t\t\tdescripcion: new RegExp(args.word, \"i\")}, (err, result) => {\n\t\t\t\t\tif(err){\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t}).populate(\"usuario_ID\")\n\t\t\t\t\t.populate(\"areaconocimiento\")\n\t\t\t\t\t.limit(args.limit).cursor();\n\n\t\t\t\tedges.on(\"data\", res => {\n\t\t\t\t\tedgePreguntaArray.push({\n\t\t\t\t\t\tcursor : Buffer.from((res.identificador).toString()).toString(\"base64\"),\n\t\t\t\t\t\tnode: res\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tedges.on(\"end\",()=> {\n\t\t\t\t\tlet endCursor = edgePreguntaArray.length > 0 ? edgePreguntaArray[edgePreguntaArray.length - 1].cursor:NaN;\n\t\t\t\t\tlet hasNextPage = new Promise((resolve, reject)=> {\n\t\t\t\t\t\tif (endCursor) {\n\t\t\t\t\t\t\tlet cursorFinal = parseInt(Buffer.from(endCursor,\"base64\").toString(\"ascii\"));\n\t\t\t\t\t\t\tmodels.Pregunta.where(\"identificador\").gt(cursorFinal).count({registroActual:true},(err, count)=> {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcount > 0 ? resolve(true): resolve(false);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tedges: edgePreguntaArray,\n\t\t\t\t\t\tpageInfo: {\n\t\t\t\t\t\t\tendCursor: endCursor,\n\t\t\t\t\t\t\thasnextPage: hasNextPage\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tlet totalPagesPromise = new Promise((resolve, reject) => {\n\t\t\t\tmodels.Pregunta.count((err, count) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}else {\n\t\t\t\t\t\tresolve(count);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tlet listPaginatePregunta = Promise.all([edgePreguntaInfoPromise, totalPagesPromise]).then((values) => {\n\t\t\t\treturn {\n\t\t\t\t\tedges: values[0].edges,\n\t\t\t\t\ttotalCount: values[1],\n\t\t\t\t\tpageInfo:{\n\t\t\t\t\t\tendCursor: values[0].pageInfo.endCursor,\n\t\t\t\t\t\thasnextPage:values[0].pageInfo.hasnextPage\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn listPaginatePregunta;\n\t\t},\n\t\tverListadoMisPreguntasActuales: (parent, args, {models})=> {\n\t\t\tif (args.idUsuario) {\n\t\t\t\treturn models.Pregunta.find({usuario_ID: args.idUsuario, registroActual: true})\n\t\t\t\t\t.populate(\"usuario_ID\")\n\t\t\t\t\t.populate(\"areaconocimiento\")\n\t\t\t\t\t.then(listadoMisPreguntas => {\n\t\t\t\t\t\treturn listadoMisPreguntas;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"It neccessary to ID of a usuario, para retrieve the information\");\n\t\t\t}\n\n\t\t},\n\t\tverListadoMisPreguntasActualesByEstado: (parent, args, {models})=> {\n\t\t\tlet estado;\n\t\t\tif (args.idUsuario){\n\t\t\t\tif (!args.estado){\n\t\t\t\t\testado = \"revision\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\testado = args.estado;\n\t\t\t\t}\n\t\t\t\treturn models.Pregunta.find({usuario_ID: args.idUsuario, registroActual: true, estado: estado})\n\t\t\t\t\t.populate(\"usuario_ID\")\n\t\t\t\t\t.populate(\"areaconocimiento\")\n\t\t\t\t\t.then(listadoPreguntas => {\n\t\t\t\t\t\treturn listadoPreguntas;\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\tif (error){\n\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"It neccessary to ID of a usuario, para retrieve the information\");\n\t\t\t}\n\n\t\t},\n\t\tlistadoPreguntasActualesByEstado: (parent, args, {models}) => {\n\t\t\tlet edgePreguntaArray = [];\n\t\t\tlet cursor = parseInt(Buffer.from(args.after, \"base64\").toString(\"ascii\"));\n\t\t\tif (!cursor){\n\t\t\t\tcursor = 0;\n\t\t\t}\n\t\t\tlet edgePreguntaInfoPromise = new Promise((resolve, reject)=> {\n\t\t\t\tlet edges = models.Pregunta.find({identificador:{$gt:cursor},registroActual: true,\n\t\t\t\t\tdescripcion: new RegExp(args.word, \"i\"),estado: args.estado}, (err, result) => {\n\t\t\t\t\tif(err){\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t}).populate(\"usuario_ID\")\n\t\t\t\t\t.populate(\"areaconocimiento\")\n\t\t\t\t\t.limit(args.limit).cursor();\n\n\t\t\t\tedges.on(\"data\", res => {\n\t\t\t\t\tedgePreguntaArray.push({\n\t\t\t\t\t\tcursor : Buffer.from((res.identificador).toString()).toString(\"base64\"),\n\t\t\t\t\t\tnode: res\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tedges.on(\"end\",()=> {\n\t\t\t\t\tlet endCursor = edgePreguntaArray.length > 0 ? edgePreguntaArray[edgePreguntaArray.length - 1].cursor:NaN;\n\t\t\t\t\tlet hasNextPage = new Promise((resolve, reject)=> {\n\t\t\t\t\t\tif (endCursor) {\n\t\t\t\t\t\t\tlet cursorFinal = parseInt(Buffer.from(endCursor,\"base64\").toString(\"ascii\"));\n\t\t\t\t\t\t\tmodels.Pregunta.where(\"identificador\").gt(cursorFinal).count({registroActual:true},(err, count)=> {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcount > 0 ? resolve(true): resolve(false);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tedges: edgePreguntaArray,\n\t\t\t\t\t\tpageInfo: {\n\t\t\t\t\t\t\tendCursor: endCursor,\n\t\t\t\t\t\t\thasnextPage: hasNextPage\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tlet totalPagesPromise = new Promise((resolve, reject) => {\n\t\t\t\tmodels.Pregunta.count((err, count) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}else {\n\t\t\t\t\t\tresolve(count);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tlet listPaginatePregunta = Promise.all([edgePreguntaInfoPromise, totalPagesPromise]).then((values) => {\n\t\t\t\treturn {\n\t\t\t\t\tedges: values[0].edges,\n\t\t\t\t\ttotalCount: values[1],\n\t\t\t\t\tpageInfo:{\n\t\t\t\t\t\tendCursor: values[0].pageInfo.endCursor,\n\t\t\t\t\t\thasnextPage:values[0].pageInfo.hasnextPage\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn listPaginatePregunta;\n\t\t},\n\t\thistorialImagenesUsadasByUserinAPregunta: (parent, args, {models}) => {\n\t\t\treturn models.Pregunta.findOne({_id: args.idPregunta, usuario_ID: args.idUsuario},\"historial_cambios estado\")\n\t\t\t\t.then(pregunta => {\n\t\t\t\t\tif (pregunta.estado === \"revision\" || pregunta.estado === \"estable\"){\n\t\t\t\t\t\treturn pregunta;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"you can to access to list Images of a closed(reject) question\");\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (error){\n\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t},\n\tMutation: {\n\t\tcrearPregunta: (parent, args, {models}) => {\n\t\t\tif (args.pregunta.descripcion && args.pregunta.usuario_ID && args.pregunta.areaconocimiento.length > 0) {\n\t\t\t\treturn models.Pregunta.count()\n\t\t\t\t\t.then(existenPreguntasCreadas => {\n\t\t\t\t\t\tif (existenPreguntasCreadas) {\n\t\t\t\t\t\t\targs.pregunta.identificador = existenPreguntasCreadas + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst objectNewPregunta = new models.Pregunta(args.pregunta);\n\t\t\t\t\t\treturn objectNewPregunta.save()\n\t\t\t\t\t\t\t.then(documento => {\n\t\t\t\t\t\t\t\treturn documento;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t}).catch(error=> {\n\t\t\t\t\t\tif (error){\n\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"there is empties fields, is not possible save a new question\");\n\t\t\t}\n\n\t\t},\n\t\teditarPregunta: (parent, args, {models}) => {\n\t\t\treturn models.Pregunta.findById(args.idPregunta)\n\t\t\t\t.then(documento => {\n\t\t\t\t\tif (documento.usuario_ID == args.pregunta.usuario_ID ) {\n\t\t\t\t\t\tif (documento.estado === \"revision\" || documento.estado === \"estable\"){\n\t\t\t\t\t\t\tlet preguntaAnterior = {\n\t\t\t\t\t\t\t\tdescripcion: documento.descripcion,\n\t\t\t\t\t\t\t\timagen: documento.imagen,\n\t\t\t\t\t\t\t\testado: documento.estado,\n\t\t\t\t\t\t\t\tfecha_creacion: documento.fecha_creacion,\n\t\t\t\t\t\t\t\ttipoPregunta: documento.tipoPregunta,\n\t\t\t\t\t\t\t\tareaconocimiento: documento.areaconocimiento,\n\t\t\t\t\t\t\t\trespuestas: documento.respuestas\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\treturn models.Pregunta.findByIdAndUpdate(args.idPregunta,\n\t\t\t\t\t\t\t\t{$push:{historial_cambios: preguntaAnterior},\n\t\t\t\t\t\t\t\t\t$set:{descripcion: args.pregunta.descripcion,\n\t\t\t\t\t\t\t\t\t\timagen: args.pregunta.imagen,\n\t\t\t\t\t\t\t\t\t\tfecha_creacion: args.pregunta.fecha_creacion,\n\t\t\t\t\t\t\t\t\t\ttipoPregunta: args.pregunta.tipoPregunta,\n\t\t\t\t\t\t\t\t\t\tareaconocimiento: args.pregunta.areaconocimiento,\n\t\t\t\t\t\t\t\t\t\trespuestas: args.pregunta.respuestas\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t,{new : true})\n\t\t\t\t\t\t\t\t.then(documentoActualizado => {\n\t\t\t\t\t\t\t\t\treturn documentoActualizado;\n\t\t\t\t\t\t\t\t}).catch(error=> {\n\t\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"this questions is closed!!, because the commite member decided \" +\n\t\t\t\t\t\t\t\t\"reject this question, so you should, create a new one\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}else {\n\t\t\t\t\t\tthrow new Error(\"you are not own this question, so you can not update\");\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t},\n\t\teliminarPregunta: (parent, args, {models}) => {\n\t\t\treturn models.User.findOne({correo: args.correoUsuario},\"_id\")\n\t\t\t\t.then(idUsuario => {\n\t\t\t\t\treturn models.Pregunta.findOne({_id: args.idPregunta, usuario_ID: idUsuario})\n\t\t\t\t\t\t.then(documentoPregunta => {\n\t\t\t\t\t\t\tif (documentoPregunta.estado === \"revision\" || documentoPregunta.estado === \"rechazada\") {\n\t\t\t\t\t\t\t\treturn models.Pregunta.findByIdAndUpdate(args.idPregunta, {$set:{registroActual: false}},{new: true})\n\t\t\t\t\t\t\t\t\t.then(documentoPregunta => {\n\t\t\t\t\t\t\t\t\t\treturn documentoPregunta;\n\t\t\t\t\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(\"this questions is accepted, is not possible delete this question\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t},\n\t\trollbackPreguntaAnterior: (parent, args, {models}) => {\n\t\t\treturn models.Pregunta.findOne({\"_id\": args.idPregunta,\n\t\t\t\t\"historial_cambios._id\": args.idPreguntaAnterior },{\"historial_cambios.$\":1,\"estado\":1})\n\t\t\t\t.populate(\"usuario_ID\")\n\t\t\t\t.then(preguntaAnterior => {\n\t\t\t\t\tif (preguntaAnterior.usuario_ID.correo === args.ownerQuestion){\n\t\t\t\t\t\tif ((preguntaAnterior.estado === \"revision\" && preguntaAnterior.historial_cambios[0].estado === \"estable\")\n\t\t\t\t\t\t\t\t|| (preguntaAnterior.estado === \"revision\" && preguntaAnterior.historial_cambios[0].estado === \"revision\")\n\t\t\t\t\t\t\t|| (preguntaAnterior.estado === \"estable\" && preguntaAnterior.historial_cambios[0].estado === \"revision\") ){\n\t\t\t\t\t\t\treturn models.Pregunta.findByIdAndUpdate(args.idPregunta,{\n\t\t\t\t\t\t\t\t$set: {descripcion: preguntaAnterior.historial_cambios[0].descripcion,\n\t\t\t\t\t\t\t\t\timagen: preguntaAnterior.historial_cambios[0].imagen,\n\t\t\t\t\t\t\t\t\testado: preguntaAnterior.historial_cambios[0].estado,\n\t\t\t\t\t\t\t\t\tfecha_creacion: preguntaAnterior.historial_cambios[0].fecha_creacion,\n\t\t\t\t\t\t\t\t\ttipoPregunta: preguntaAnterior.historial_cambios[0].tipoPregunta,\n\t\t\t\t\t\t\t\t\tareaconocimiento: preguntaAnterior.historial_cambios[0].areaconocimiento,\n\t\t\t\t\t\t\t\t\trespuestas: preguntaAnterior.historial_cambios[0].respuestas}\n\t\t\t\t\t\t\t},{new: true}).then(pregunta => {\n\t\t\t\t\t\t\t\treturn pregunta;\n\n\t\t\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"the rule to make rollback this question is not correct\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"you can't make rollback this question because you are not the owner!!\");\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\trollbackDescripcionPregunta: (parent, args, {models}) => {\n\t\t\treturn models.Pregunta.findOne({\"_id\": args.idPregunta,\n\t\t\t\t\"historial_cambios._id\": args.idPreguntaAnterior },{\"historial_cambios.$\":1,\"estado\":1})\n\t\t\t\t.populate(\"usuario_ID\")\n\t\t\t\t.then(preguntaAnterior => {\n\t\t\t\t\tif (preguntaAnterior.usuario_ID.correo === args.ownerQuestion){\n\t\t\t\t\t\tif ((preguntaAnterior.estado === \"revision\" && preguntaAnterior.historial_cambios[0].estado === \"estable\")\n\t\t\t\t\t\t\t|| (preguntaAnterior.estado === \"revision\" && preguntaAnterior.historial_cambios[0].estado === \"revision\")\n\t\t\t\t\t\t\t|| (preguntaAnterior.estado === \"estable\" && preguntaAnterior.historial_cambios[0].estado === \"revision\") ){\n\t\t\t\t\t\t\treturn models.Pregunta.findByIdAndUpdate(args.idPregunta,{\n\t\t\t\t\t\t\t\t$set: {descripcion: preguntaAnterior.historial_cambios[0].descripcion}\n\t\t\t\t\t\t\t},{new: true}).then(pregunta => {\n\t\t\t\t\t\t\t\treturn pregunta;\n\n\t\t\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"the rule to make rollback this question is not correct\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"you can't make rollback this question because you are not the owner!!\");\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t},\n\t\trollbackRespuestasPregunta: (parent, args, {models}) => {\n\t\t\treturn models.Pregunta.findOne({\"_id\": args.idPregunta,\n\t\t\t\t\"historial_cambios._id\": args.idPreguntaAnterior },{\"historial_cambios.$\":1,\"estado\":1})\n\t\t\t\t.populate(\"usuario_ID\")\n\t\t\t\t.then(preguntaAnterior => {\n\t\t\t\t\tif (preguntaAnterior.usuario_ID.correo === args.ownerQuestion){\n\t\t\t\t\t\tif ((preguntaAnterior.estado === \"revision\" && preguntaAnterior.historial_cambios[0].estado === \"estable\")\n\t\t\t\t\t\t\t|| (preguntaAnterior.estado === \"revision\" && preguntaAnterior.historial_cambios[0].estado === \"revision\")\n\t\t\t\t\t\t\t|| (preguntaAnterior.estado === \"estable\" && preguntaAnterior.historial_cambios[0].estado === \"revision\") ){\n\t\t\t\t\t\t\treturn models.Pregunta.findByIdAndUpdate(args.idPregunta,{\n\t\t\t\t\t\t\t\t$set: {respuestas: preguntaAnterior.historial_cambios[0].respuestas}\n\t\t\t\t\t\t\t},{new: true}).then(pregunta => {\n\t\t\t\t\t\t\t\treturn pregunta;\n\n\t\t\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"the rule to make rollback this question is not correct\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"you can't make rollback this question because you are not the owner!!\");\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t},\n\t\trollbackImagenPregunta: (parent, args, {models}) => {\n\t\t\treturn models.Pregunta.findOne({\"_id\": args.idPregunta,\n\t\t\t\t\"historial_cambios._id\": args.idPreguntaAnterior },{\"historial_cambios.$\":1,\"estado\":1})\n\t\t\t\t.populate(\"usuario_ID\")\n\t\t\t\t.then(preguntaAnterior => {\n\t\t\t\t\tif (preguntaAnterior.usuario_ID.correo === args.ownerQuestion){\n\t\t\t\t\t\tif ((preguntaAnterior.estado === \"revision\" && preguntaAnterior.historial_cambios[0].estado === \"estable\")\n\t\t\t\t\t\t\t|| (preguntaAnterior.estado === \"revision\" && preguntaAnterior.historial_cambios[0].estado === \"revision\")\n\t\t\t\t\t\t\t|| (preguntaAnterior.estado === \"estable\" && preguntaAnterior.historial_cambios[0].estado === \"revision\") ){\n\t\t\t\t\t\t\treturn models.Pregunta.findByIdAndUpdate(args.idPregunta,{\n\t\t\t\t\t\t\t\t$set: {imagen: preguntaAnterior.historial_cambios[0].imagen}\n\t\t\t\t\t\t\t},{new: true}).then(pregunta => {\n\t\t\t\t\t\t\t\treturn pregunta;\n\n\t\t\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"the rule to make rollback this question is not correct\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"you can't make rollback this question because you are not the owner!!\");\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tthrow new Error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t}\n\n\t}\n};\n"]}