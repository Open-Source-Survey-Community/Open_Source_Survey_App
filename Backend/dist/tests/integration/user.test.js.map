{"version":3,"sources":["../../../tests/integration/user.test.js"],"names":["tester","require","describe","self","test","url","contentType","it","done","JSON","stringify","query","variables","correo","nombre","urlImage","rol","acciones","then","expect","response","status","toBe","success","data","crearUsuario","toMatch","id","imagen","addImage","apellido","editarApellido","undefined","editarNombreUsuario","wiki","addWiki","area_academica","editarAreaAcademica","grado_academico","editarGradoAcademicoUsuario","institucion","editarInstitucionUsuario","mostrarPerfilUsuario","listaUsuariosByName","length","listarTodosUsuarios"],"mappings":"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","file":"user.test.js","sourcesContent":["/* eslint-disable quotes */\nconst tester = require('graphql-tester').tester;\n\n/* eslint-disable no-undef */\ndescribe(\"Modelo usuario\", function (){\n\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\tit (\"El usuario deberia registrarse como nuevo usuario en la base de datos\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearUsuario($correo: String!, $nombre: String,\n\t\t\t\t\t\t$urlImage: String, $rol: String, $acciones: String){\n\t\t\t\t\t\t\tcrearUsuario(correo: $correo,nombre: $nombre, urlImage: $urlImage,\n\t\t\t\t\t\t\t \t\t\t\trol: $rol, acciones: $acciones){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tcorreo: 'kevinandresortizmerchan@gmail.com',\n\t\t\t\t\tnombre: 'kevin Ortiz Merchan',\n\t\t\t\t\turlImage: 'no image',\n\t\t\t\t\trol: 'usuario',\n\t\t\t\t\tacciones: 'crear pregunta, crear encuesta, creacion contenido'\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearUsuario.nombre).toMatch(/kevin Ortiz/);\n\t\t\t\texpect(response.data.crearUsuario.correo).toMatch(/kevinandresortizmerchan@gmail.com/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit (\"El usuario deberia autenticarse como usuario existente en la base de datos\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearUsuario($correo: String!, $nombre: String,\n\t\t\t\t\t\t$urlImage: String, $rol: String, $acciones: String){\n\t\t\t\t\t\t\tcrearUsuario(correo: $correo,nombre: $nombre, urlImage: $urlImage,\n\t\t\t\t\t\t\t \t\t\t\trol: $rol, acciones: $acciones){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tcorreo: 'kevinandresortizmerchan@gmail.com',\n\t\t\t\t\tnombre: 'kevin Ortiz Merchan',\n\t\t\t\t\turlImage: 'no image',\n\t\t\t\t\trol: 'usuario',\n\t\t\t\t\tacciones: 'crear pregunta, crear encuesta, creacion contenido'\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearUsuario.nombre).toMatch(/kevin Ortiz/);\n\t\t\t\texpect(response.data.crearUsuario.correo).toMatch(/kevinandresortizmerchan@gmail.com/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit (\"el usuario deberia add image a su coleccion en la base de datos\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation addImage($id: String, $imagen: String){\n\t\t\t\t\t\t\taddImage(id: $id,imagen: $imagen){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\turlImage\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\timagen: \"imagen2\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.addImage.urlImage).toMatch(/imagen2/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit (\"el usuario no deberia add image si no existe un id\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation addImage($id: String, $imagen: String){\n\t\t\t\t\t\t\taddImage(id: $id,imagen: $imagen){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\turlImage\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"\",\n\t\t\t\t\timagen: \"imagen2\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.addImage).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit (\"el usuario deberia actualizar el apellido de la base de datos\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarApellido($id: String, $apellido: String){\n\t\t\t\t\t\t\teditarApellido(id: $id,apellido: $apellido){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tapellido\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tapellido: \"Ortiz Merchan\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarApellido.apellido).toMatch(/Ortiz Merchan/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit (\"un usuario no podria actualizar el apellido de la base de datos si el id es null o vacio\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarApellido($id: String, $apellido: String){\n\t\t\t\t\t\t\teditarApellido(id: $id,apellido: $apellido){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tapellido\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: undefined,\n\t\t\t\t\tapellido: \"Andres Merchan\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarApellido).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\tit (\"un usuario no deberia actualizar su apellido si el campo esta vacio o es nulo\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarApellido($id: String, $apellido: String){\n\t\t\t\t\t\t\teditarApellido(id: $id,apellido: $apellido){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tapellido\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tapellido: null\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarApellido).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\tit (\"un usuario deberia actualizar el nombre en la base de datos\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarNombreUsuario($id: String, $nombre: String){\n\t\t\t\t\t\t\teditarNombreUsuario(id: $id,nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tnombre: \"Kevin Andres\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarNombreUsuario.nombre).toMatch(/Andres/);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit (\"un usuario no deberia actualizar un nombre en la base de datos si el id es nulo o el nombre que envia es nula\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarNombreUsuario($id: String, $nombre: String){\n\t\t\t\t\t\t\teditarNombreUsuario(id: $id,nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"\",\n\t\t\t\t\tnombre: \"Kevin Andres\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarNombreUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarNombreUsuario($id: String, $nombre: String){\n\t\t\t\t\t\t\teditarNombreUsuario(id: $id,nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: null,\n\t\t\t\t\tnombre: \"Kevin Andres\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarNombreUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarNombreUsuario($id: String, $nombre: String){\n\t\t\t\t\t\t\teditarNombreUsuario(id: $id,nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: undefined,\n\t\t\t\t\tnombre: \"Kevin Andres\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarNombreUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarNombreUsuario($id: String, $nombre: String){\n\t\t\t\t\t\t\teditarNombreUsuario(id: $id,nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tnombre: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarNombreUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarNombreUsuario($id: String, $nombre: String){\n\t\t\t\t\t\t\teditarNombreUsuario(id: $id,nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tnombre: null\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarNombreUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarNombreUsuario($id: String, $nombre: String){\n\t\t\t\t\t\t\teditarNombreUsuario(id: $id,nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tnombre: undefined\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarNombreUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarNombreUsuario($id: String, $nombre: String){\n\t\t\t\t\t\t\teditarNombreUsuario(id: $id,nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: undefined,\n\t\t\t\t\tnombre: undefined\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarNombreUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\tit (\"un usuario deberia actualizar el wiki o biografia en la base de datos\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation addWiki($id: String, $wiki: String){\n\t\t\t\t\t\t\taddWiki(id: $id,wiki: $wiki){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\twiki\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\twiki: \"es una wiki de ejemplo\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.addWiki.wiki).toMatch(/es una wiki/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\tit (\"un usuario no deberia actualizar el wiki o biografia en la base de datos si el id es nulo o la\" +\n\t\t\"biografia es nula\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation addWiki($id: String, $wiki: String){\n\t\t\t\t\t\t\taddWiki(id: $id,wiki: $wiki){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\twiki\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: null,\n\t\t\t\t\twiki: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.addWiki).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit (\"un usuario deberia actualizar el area academica en la base de datos\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarAreaAcademica($id: String, $area_academica: String){\n\t\t\t\t\t\t\teditarAreaAcademica(id: $id,area_academica: $area_academica){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tarea_academica\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tarea_academica: \"ingeniero en computacion\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarAreaAcademica.area_academica).toMatch(/computacion/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\tit (\"un usuario no deberia actualizar el area academica en la base de datos si el id es nulo\" ,(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarAreaAcademica($id: String, $area_academica: String){\n\t\t\t\t\t\t\teditarAreaAcademica(id: $id,area_academica: $area_academica){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tarea_academica\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: null,\n\t\t\t\t\tarea_academica: \"ingeniero en mecanica\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarAreaAcademica).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\tit (\"un usuario deberia actualizar el grado academico en la base de datos \",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarGradoAcademicoUsuario($id: String, $grado_academico: String!){\n\t\t\t\t\t\t\teditarGradoAcademicoUsuario(id: $id,grado_academico: $grado_academico){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tgrado_academico\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tgrado_academico: \"ingeniero\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarGradoAcademicoUsuario.grado_academico).toMatch(/ingeniero/);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit (\"un usuario no deberia actualizar el grado academico en la base de datos si el id es nulo 0\" +\n\t\t\"el grado academica es nulo \",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarGradoAcademicoUsuario($id: String, $grado_academico: String!){\n\t\t\t\t\t\t\teditarGradoAcademicoUsuario(id: $id,grado_academico: $grado_academico){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tgrado_academico\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"\",\n\t\t\t\t\tgrado_academico: \"ingeniero\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarGradoAcademicoUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarGradoAcademicoUsuario($id: String, $grado_academico: String!){\n\t\t\t\t\t\t\teditarGradoAcademicoUsuario(id: $id,grado_academico: $grado_academico){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tgrado_academico\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: null,\n\t\t\t\t\tgrado_academico: \"ingeniero\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarGradoAcademicoUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarGradoAcademicoUsuario($id: String, $grado_academico: String!){\n\t\t\t\t\t\t\teditarGradoAcademicoUsuario(id: $id,grado_academico: $grado_academico){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tgrado_academico\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: undefined,\n\t\t\t\t\tgrado_academico: \"ingeniero\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarGradoAcademicoUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarGradoAcademicoUsuario($id: String, $grado_academico: String!){\n\t\t\t\t\t\t\teditarGradoAcademicoUsuario(id: $id,grado_academico: $grado_academico){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tgrado_academico\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tgrado_academico: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarGradoAcademicoUsuario.grado_academico).toMatch(\"\");\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit (\"un usuario deberia anadir a una institucion que pertenece en la base de datos \",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarInstitucionUsuario($id: String, $institucion: String!){\n\t\t\t\t\t\t\teditarInstitucionUsuario(id: $id,institucion: $institucion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tinstitucion\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\tinstitucion: \"Escuela Superior Politecnica del Litoral\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarInstitucionUsuario.institucion).toMatch(/Escuela Superior/);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\tit (\"un usuario no deberia anadir a una institucion que pertenece en la base de datos si el id es nulo\" ,(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarInstitucionUsuario($id: String, $institucion: String!){\n\t\t\t\t\t\t\teditarInstitucionUsuario(id: $id,institucion: $institucion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tinstitucion\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"\",\n\t\t\t\t\tinstitucion: \"Escuela Superior Politecnica del Litoral\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarInstitucionUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarInstitucionUsuario($id: String, $institucion: String!){\n\t\t\t\t\t\t\teditarInstitucionUsuario(id: $id,institucion: $institucion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tinstitucion\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: null,\n\t\t\t\t\tinstitucion: \"Escuela Superior Politecnica del Litoral\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarInstitucionUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarInstitucionUsuario($id: String, $institucion: String!){\n\t\t\t\t\t\t\teditarInstitucionUsuario(id: $id,institucion: $institucion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tinstitucion\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: undefined,\n\t\t\t\t\tinstitucion: \"Escuela Superior Politecnica del Litoral\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarInstitucionUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit (\"un usuario deberia mostrar informacion aerca del perfil del Usuario\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query mostrarPerfilUsuario($id: String){\n\t\t\t\t\t\t\tmostrarPerfilUsuario(id: $id){\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"5ac248c98a3f74223f16895e\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.mostrarPerfilUsuario.nombre).toMatch(/Kevin/);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit (\"un usuario no podria ver su informacion si el id es nulo\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query mostrarPerfilUsuario($id: String){\n\t\t\t\t\t\t\tmostrarPerfilUsuario(id: $id){\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tid: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.mostrarPerfilUsuario).toBe(null);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\tit (\"deveria devolver un array de usuario filtrados sin ningun caracter\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listaUsuariosByName($nombre: String){\n\t\t\t\t\t\t\tlistaUsuariosByName(nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tnombre: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.listaUsuariosByName.length).toBe(2);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit (\"deveria devolver un array de usuario filtrados con un caracter\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listaUsuariosByName($nombre: String){\n\t\t\t\t\t\t\tlistaUsuariosByName(nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tnombre: \"M\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.listaUsuariosByName.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit (\"deveria devolver un array de usuario filtrados con mas de un  caracter\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listaUsuariosByName($nombre: String){\n\t\t\t\t\t\t\tlistaUsuariosByName(nombre: $nombre){\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tnombre: \"KEVIN\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.listaUsuariosByName.length).toBe(2);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit (\"deveria devolver un array de usuario de Usuarios\",(done)=>{\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listarTodosUsuarios{\n\t\t\t\t\t\t\tlistarTodosUsuarios{\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.listarTodosUsuarios.length).toBe(2);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\n});"]}