{"version":3,"sources":["../../../tests/integration/pregunta.test.js"],"names":["tester","require","describe","self","test","url","contentType","it","done","JSON","stringify","query","variables","pregunta","descripcion","usuario_ID","imagen","fecha_creacion","Date","tipoPregunta","areaconocimiento","respuestas","then","expect","response","status","toBe","success","data","crearPregunta","toMatch","idPregunta","editarPregunta","errors","length","undefined","correoUsuario","idUsuario","historialImagenesUsadasByUserinAPregunta","historial_cambios","after","limit","word","idAreaConocimiento","cargarListadoPreguntasByAreasConocimiento","totalCount","listadoAreasConocimientosUsadasPreguntas","verMyPreguntaActual","nombre","correo","verListadoMisPreguntasActuales","listadoUsuariosDistintosCreadoPreguntas","estado","verListadoMisPreguntasActualesByEstado","listadoPreguntasActuales","edges","pageInfo","hasnextPage","idPreguntaAnterior","ownerQuestion","rollbackPreguntaAnterior","rollbackDescripcionPregunta","rollbackRespuestasPregunta"],"mappings":"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","file":"pregunta.test.js","sourcesContent":["/* eslint-disable no-undef,quotes */\nconst tester = require(\"graphql-tester\").tester;\n\ndescribe(\"Escenario Crear pregunta\", function ( ) {\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\t/**\n\t * Pregunta con casilla de verificacion, usuario 5ac248c98a3f74223f16895e\n\t */\n\tit(\"El usuario deberia crear una nueva pregunta con respuesta de casilla de verificacion\", (done) => {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"Pregunta con respuesta de casilla de verificacion\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\timagen: \"imagen de casilla de verificacion\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"casilla verficacion\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t\trespuestas: [1,2,3,4,5,6]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearPregunta.descripcion).toMatch(/casilla de verificacion/);\n\t\t\t\texpect(response.data.crearPregunta.imagen).toMatch(/imagen/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\t/**\n\t * Pregunta con casilla de verificacion, usuario 5ac248c98a3f74223f16895e\n\t */\n\tit(\"El usuario deberia crear una nueva pregunta con respuesta de una sola opcion por escoger\", (done) => {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"Pregunta con opciones multiples\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"opciones multiples\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t\trespuestas: [\"una\",\"dos\", \"tres\", \"cuatro\"]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearPregunta.descripcion).toMatch(/Pregunta con opciones multiples/);\n\t\t\t\texpect(response.data.crearPregunta.imagen).toMatch(/no/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\t/**\n\t * Pregunta con casilla de verificacion, usuario 5ac248c98a3f74223f16895e\n\t */\n\tit(\"El usuario deberia crear una nueva pregunta con respuesta de tipo si o no\", (done) => {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"Pregunta con opciones de si o no\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"Si_No\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearPregunta.descripcion).toMatch(/Pregunta con opciones de si o no/);\n\t\t\t\texpect(response.data.crearPregunta.imagen).toMatch(/no/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\t/**\n\t * Pregunta con casilla de verificacion, usuario 5ac248c98a3f74223f16895e\n\t */\n\tit(\"El usuario deberia crear una nueva pregunta con respuesta de tipo abierta\", (done) => {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"Pregunta de ejemplo de tipo abierta\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearPregunta.descripcion).toMatch(/Pregunta de ejemplo de tipo abierta/);\n\t\t\t\texpect(response.data.crearPregunta.imagen).toMatch(/no/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\t/**\n\t * Pregunta con casilla de verificacion, usuario 5ac248c98a3f74223f16895e\n\t */\n\tit(\"El usuario deberia crear una nueva pregunta con respuesta de tipo rating\", (done) => {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"Pregunta de ejemplo de rating\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"escala\",\n\t\t\t\t\t\trespuestas: [1,2,3,4,6,7],\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearPregunta.descripcion).toMatch(/Pregunta de ejemplo de rating/);\n\t\t\t\texpect(response.data.crearPregunta.imagen).toMatch(/no/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n});\n\ndescribe(\"Escenario editar Pregunta\", function () {\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\tit(\"Deberia poder editar una pregunta, enviando un identificador de usuario como parametro de busqueda\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarPregunta($idPregunta: String, $pregunta: PreguntaInput ){\n\t\t\t\t\t\t\teditarPregunta(idPregunta: $idPregunta,pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"Pregunta editada de ejemplo version 9\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\timagen: \"imagen de ejemplo numero 5\",\n\t\t\t\t\t\ttipoPregunta: \"lista_desplegable\",\n\t\t\t\t\t\trespuestas: [\"una lista\",\"dos lista\",\"tres lista\"],\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarPregunta.descripcion).toMatch(/version 9/);\n\t\t\t\texpect(response.data.editarPregunta.imagen).toMatch(/numero 5/);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\tit(\"Deberia no poder editar una pregunta, ya que no soy el autor de la pregunta\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarPregunta($idPregunta: String, $pregunta: PreguntaInput ){\n\t\t\t\t\t\t\teditarPregunta(idPregunta: $idPregunta,pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"5ac8ef4f6b873951705728c3\",\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"Pregunta editada de ejemplo version 5\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16111e\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\timagen: \"imagen de ejemplo numero 5\",\n\t\t\t\t\t\ttipoPregunta: \"lista_desplegable\",\n\t\t\t\t\t\trespuestas: [\"una lista\",\"dos lista\",\"tres lista\"],\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit(\"Deberia poder editar una pregunta si el estado de la pregunta es en revision o aceptada\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarPregunta($idPregunta: String, $pregunta: PreguntaInput ){\n\t\t\t\t\t\t\teditarPregunta(idPregunta: $idPregunta,pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"Pregunta anteriormente editada\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\timagen: \"imagen de ejemplo numero 5\",\n\t\t\t\t\t\ttipoPregunta: \"lista_desplegable\",\n\t\t\t\t\t\trespuestas: [\"una lista\",\"dos lista\",\"tres lista\"],\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarPregunta.descripcion).toMatch(/anteriormente editada/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n});\n\ndescribe(\"Validaciones en el modelo Pregunta\", function () {\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\n\tit(\"No deberia poder guardar una pregunta si la descripcion esta vacia o es nula, el\" +\n\t\t\"resultado que se espera es obtener un error, describiendo el valor faltante\", (done) => {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\timagen: \"imagen1\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"casilla verficacion\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t\trespuestas: [1,2,3,4,5,6]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.data.crearPregunta).toBe(null);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: null,\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\timagen: \"imagen1\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"casilla verficacion\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t\trespuestas: [1,2,3,4,5,6]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(400);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.data).toBe(undefined);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: undefined,\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\timagen: \"imagen1\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"casilla verficacion\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t\trespuestas: [1,2,3,4,5,6]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(400);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.data).toBe(undefined);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit(\"No deberia poder crear una nueva pregunta si el usuario ID es vacio \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"pregunta de ejemplo\",\n\t\t\t\t\t\tusuario_ID: \"\",\n\t\t\t\t\t\timagen: \"imagen1\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"casilla verficacion\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t\trespuestas: [1,2,3,4,5,6]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.data.crearPregunta).toBe(null);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"pregunta de ejemplo\",\n\t\t\t\t\t\tusuario_ID: null,\n\t\t\t\t\t\timagen: \"imagen1\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"casilla verficacion\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t\trespuestas: [1,2,3,4,5,6]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(400);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.data).toBe(undefined);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\tit(\"No deberia poder guardar una nueva pregunta si la fecha de creacion esta vacia\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"pregunta de ejemplo\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\timagen: \"imagen1\",\n\t\t\t\t\t\tfecha_creacion: null,\n\t\t\t\t\t\ttipoPregunta: \"casilla verficacion\",\n\t\t\t\t\t\tareaconocimiento: [\"5ac8e07bd3fe0e46a4a06085\"],\n\t\t\t\t\t\trespuestas: [1,2,3,4,5,6]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(400);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.data).toBe(undefined);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n\tit(\"No deberia poder guardar una nueva pregunta si el area de conocimiento esta vacia\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearPregunta($pregunta: PreguntaInput ){\n\t\t\t\t\t\t\tcrearPregunta(pregunta: $pregunta){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tpregunta: {\n\t\t\t\t\t\tdescripcion: \"pregunta de ejemplo\",\n\t\t\t\t\t\tusuario_ID: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\timagen: \"imagen1\",\n\t\t\t\t\t\tfecha_creacion: new Date(),\n\t\t\t\t\t\ttipoPregunta: \"casilla verficacion\",\n\t\t\t\t\t\tareaconocimiento: [],\n\t\t\t\t\t\trespuestas: [1,2,3,4,5,6]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.data.crearPregunta).toBe(null);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n});\n\ndescribe(\"Escenario eliminar Pregunta\", function (){\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\n\tit(\"Deberia eliminar una pregunta si el estado de la pregunta es revision o rechazada\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation eliminarPregunta($idPregunta: String!, $correoUsuario: String! ){\n\t\t\t\t\t\t\teliminarPregunta(idPregunta: $idPregunta, correoUsuario: $correoUsuario){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"5acc3cdb4f18012415badf23\",\n\t\t\t\t\tcorreoUsuario: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n});\n\ndescribe(\"Consultas al modelo Pregunta\", function (){\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\tit(\"Deberia poder ver una determinada pregunta \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verMyPreguntaActual($idPregunta: String!){\n\t\t\t\t\t\t\t  verMyPreguntaActual(idPregunta: $idPregunta){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"5acc3cdb4f18012415badf23\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n\tit(\"Deberia poder la lista de imagenes que he usado en una pregunta que se encuestra en estado de revision\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query historialImagenesUsadasByUserinAPregunta($idPregunta: String, $idUsuario: String){\n\t\t\t\t\t\t\t  historialImagenesUsadasByUserinAPregunta(idPregunta: $idPregunta, idUsuario: $idUsuario){\n\t\t\t\t\t\t\t \t\t\t\t\thistorial_cambios {\n\t\t\t\t\t\t\t \t\t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidUsuario: \"5ac248c98a3f74223f16895e\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.historialImagenesUsadasByUserinAPregunta.historial_cambios.length).toBe(2);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit(\"Deberia poder cargar la lista de preguntas, segun el area de conocimiento\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query cargarListadoPreguntasByAreasConocimiento($after: String, $limit: Int,$word: String,$idAreaConocimiento: String ){\n\t\t\t\t\t\t\t  cargarListadoPreguntasByAreasConocimiento(after: $after, limit: $limit, word: $word, idAreaConocimiento:$idAreaConocimiento){\n\t\t\t\t\t\t\t \t\t\t\t\ttotalCount\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tafter:\"\",\n\t\t\t\t\tlimit:5,\n\t\t\t\t\tword:\"\",\n\t\t\t\t\tidAreaConocimiento:\"5ac8e07bd3fe0e46a4a06085\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.cargarListadoPreguntasByAreasConocimiento.totalCount).toBe(4);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit(\"Deberia poder ver la lista de las areas conocimientos que se han usado en una pregunta\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listadoAreasConocimientosUsadasPreguntas{\n\t\t\t\t\t\t\t  listadoAreasConocimientosUsadasPreguntas{\n\t\t\t\t\t\t\t \t\t\t\t\ttitulo\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.listadoAreasConocimientosUsadasPreguntas.length).toBe(2);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit(\"Deberia no poder ver la informacion de un usuario, si no provee un identificador \" +\n\t\t\"de la pregunta\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verMyPreguntaActual($idPregunta: String!){\n\t\t\t\t\t\t\t  verMyPreguntaActual(idPregunta: $idPregunta){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\tit(\"Deberia poder ver el usuario propietario de determinada Pregunta\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verMyPreguntaActual($idPregunta: String!){\n\t\t\t\t\t\t\t  verMyPreguntaActual(idPregunta: $idPregunta){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"5acc3cdb4f18012415badf23\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.verMyPreguntaActual.usuario_ID.nombre).toMatch(/Kevin/);\n\t\t\t\texpect(response.data.verMyPreguntaActual.usuario_ID.correo).toMatch(/kevinandresortizmerchan111@gmail.com/);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n\tit(\"Deberia no poder ver una pregunta, si no envio un identificador a dicha pregunta \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verMyPreguntaActual($idPregunta: String!){\n\t\t\t\t\t\t\t  verMyPreguntaActual(idPregunta: $idPregunta){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verMyPreguntaActual($idPregunta: String!){\n\t\t\t\t\t\t\t  verMyPreguntaActual(idPregunta: $idPregunta){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: null\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verMyPreguntaActual($idPregunta: String!){\n\t\t\t\t\t\t\t  verMyPreguntaActual(idPregunta: $idPregunta){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: undefined\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit(\"Deberia poder ver el listado de las preguntas actuales de un usuarios\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActuales($idUsuario: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActuales(idUsuario: $idUsuario){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: \"5ac248c98a3f74223f16895e\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.verListadoMisPreguntasActuales.length).toBe(5);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n\tit(\"Deberia poder ver el listado de los usuarios distintos que han creado preguntas\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listadoUsuariosDistintosCreadoPreguntas{\n\t\t\t\t\t\t\t  listadoUsuariosDistintosCreadoPreguntas{\n\t\t\t\t\t\t\t \t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.listadoUsuariosDistintosCreadoPreguntas.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\tit(\"Deberia no poder ver el listado de las preguntas de un usuarios si, no envio un identificador del usuario \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActuales($idUsuario: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActuales(idUsuario: $idUsuario){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActuales($idUsuario: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActuales(idUsuario: $idUsuario){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: null\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActuales($idUsuario: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActuales(idUsuario: $idUsuario){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: undefined\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\tit(\"Deberia poder ver el listado de preguntas actuales by estado\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActualesByEstado($idUsuario: String, $estado: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActualesByEstado(idUsuario: $idUsuario, estado: $estado){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\testado: \"revision\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.verListadoMisPreguntasActualesByEstado.length).toBe(5);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n\tit(\"Deberia no poder ver el listado de preguntas actuales by estado \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActualesByEstado($idUsuario: String, $estado: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActualesByEstado(idUsuario: $idUsuario, estado: $estado){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: \"\",\n\t\t\t\t\testado: \"revision\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActualesByEstado($idUsuario: String, $estado: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActualesByEstado(idUsuario: $idUsuario, estado: $estado){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: null,\n\t\t\t\t\testado: \"revision\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActualesByEstado($idUsuario: String, $estado: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActualesByEstado(idUsuario: $idUsuario, estado: $estado){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: undefined,\n\t\t\t\t\testado: \"revision\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query verListadoMisPreguntasActualesByEstado($idUsuario: String, $estado: String){\n\t\t\t\t\t\t\t  verListadoMisPreguntasActualesByEstado(idUsuario: $idUsuario, estado: $estado){\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\testado\n\t\t\t\t\t\t\t \t\t\t\t\tusuario_ID {\n\t\t\t\t\t\t\t \t\t\t\t\t\tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t}\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidUsuario: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\testado: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.verListadoMisPreguntasActualesByEstado.length).toBe(5);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n});\n\ndescribe(\"Paginacion sobre el modelo Preguntas\", function (){\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\n\tit(\"deberia poder ver los primeros 3 preguntas\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listadoPreguntasActuales($after: String!, $limit: Int, $word: String){\n\t\t\t\t\t\t\t  listadoPreguntasActuales(after: $after, limit: $limit, word: $word){\n\t\t\t\t\t\t\t \t\t\t\t\ttotalCount\n\t\t\t\t\t\t\t \t\t\t\t\tedges {\n\t\t\t\t\t\t\t \t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t \t\t\t\t\t\tnode{\n\t\t\t\t\t\t\t \t\t\t\t\t\t descripcion\n\t\t\t\t\t\t\t \t\t\t\t\t\t imagen\n\t\t\t\t\t\t\t \t\t\t\t\t\t usuario_ID{\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tapellido\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t\t }\t\n\t\t\t\t\t\t\t \t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t\tpageInfo {\n\t\t\t\t\t\t\t \t\t\t\t\t\tendCursor\n\t\t\t\t\t\t\t \t\t\t\t\t\thasnextPage\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tafter: \"\",\n\t\t\t\t\tlimit: 3,\n\t\t\t\t\tword: \"\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.listadoPreguntasActuales.totalCount).toBe(5);\n\t\t\t\texpect(response.data.listadoPreguntasActuales.edges.length).toBe(3);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listadoPreguntasActuales($after: String!, $limit: Int){\n\t\t\t\t\t\t\t  listadoPreguntasActuales(after: $after, limit: $limit){\n\t\t\t\t\t\t\t \t\t\t\t\ttotalCount\n\t\t\t\t\t\t\t \t\t\t\t\tedges {\n\t\t\t\t\t\t\t \t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t \t\t\t\t\t\tnode{\n\t\t\t\t\t\t\t \t\t\t\t\t\t descripcion\n\t\t\t\t\t\t\t \t\t\t\t\t\t imagen\n\t\t\t\t\t\t\t \t\t\t\t\t\t usuario_ID{\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tapellido\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t\t }\t\n\t\t\t\t\t\t\t \t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t\tpageInfo {\n\t\t\t\t\t\t\t \t\t\t\t\t\tendCursor\n\t\t\t\t\t\t\t \t\t\t\t\t\thasnextPage\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tafter: null,\n\t\t\t\t\tlimit: 3\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(400);\n\t\t\t\tdone();\n\t\t\t});\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listadoPreguntasActuales($after: String!, $limit: Int){\n\t\t\t\t\t\t\t  listadoPreguntasActuales(after: $after, limit: $limit){\n\t\t\t\t\t\t\t \t\t\t\t\ttotalCount\n\t\t\t\t\t\t\t \t\t\t\t\tedges {\n\t\t\t\t\t\t\t \t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t \t\t\t\t\t\tnode{\n\t\t\t\t\t\t\t \t\t\t\t\t\t descripcion\n\t\t\t\t\t\t\t \t\t\t\t\t\t imagen\n\t\t\t\t\t\t\t \t\t\t\t\t\t usuario_ID{\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tapellido\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t\t }\t\n\t\t\t\t\t\t\t \t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t\tpageInfo {\n\t\t\t\t\t\t\t \t\t\t\t\t\tendCursor\n\t\t\t\t\t\t\t \t\t\t\t\t\thasnextPage\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tafter: undefined,\n\t\t\t\t\tlimit: 3\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(400);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n\tit(\"Deberia pode obtener todas los documentos\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `query listadoPreguntasActuales($after: String!, $limit: Int){\n\t\t\t\t\t\t\t  listadoPreguntasActuales(after: $after, limit: $limit){\n\t\t\t\t\t\t\t \t\t\t\t\ttotalCount\n\t\t\t\t\t\t\t \t\t\t\t\tedges {\n\t\t\t\t\t\t\t \t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t \t\t\t\t\t\tnode{\n\t\t\t\t\t\t\t \t\t\t\t\t\t descripcion\n\t\t\t\t\t\t\t \t\t\t\t\t\t imagen\n\t\t\t\t\t\t\t \t\t\t\t\t\t usuario_ID{\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tnombre\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tapellido\n\t\t\t\t\t\t\t \t\t\t\t\t\t \tcorreo\n\t\t\t\t\t\t\t \t\t\t\t\t\t }\t\n\t\t\t\t\t\t\t \t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t\tpageInfo {\n\t\t\t\t\t\t\t \t\t\t\t\t\tendCursor\n\t\t\t\t\t\t\t \t\t\t\t\t\thasnextPage\n\t\t\t\t\t\t\t \t\t\t\t\t}\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tafter: \"\",\n\t\t\t\t\tlimit: 5\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.listadoPreguntasActuales.totalCount).toBe(5);\n\t\t\t\texpect(response.data.listadoPreguntasActuales.edges.length).toBe(5);\n\t\t\t\texpect(response.data.listadoPreguntasActuales.pageInfo.hasnextPage).toBe(false);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\n});\n\ndescribe(\"Hacer rollback de las pregunta\", function (){\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\tit(\"Deberia poder retornar a una pregunta anterior si el estado\" +\n\t\t\"de mi pregunta es de revision y la pregunta que deseo hacer\" +\n\t\t\"rollback se encuentra en un estado estable \" +\n\t\t\"estable \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackPreguntaAnterior($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackPreguntaAnterior(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables:{\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e40f9e9cb643415b0f5\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.rollbackPreguntaAnterior.descripcion).toMatch(/Pregunta con respuesta de casilla de verificacion/);\n\t\t\t\tdone();\n\t\t\t});\n\n\t});\n\n\tit(\"Deberia poder hacer rollback de una pregunta que su estado actual sea de\" +\n\t\t\"revision y la pregunta que deseo hacer rollback sea de revision\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackPreguntaAnterior($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackPreguntaAnterior(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e877dfe80644e79a9b1\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.rollbackPreguntaAnterior.descripcion).toMatch(/Pregunta editada de ejemplo version 9/);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit(\"Deberia poder hacer rollback de una pregunta que su estado actual sea \" +\n\t\t\"estable y la pregunta que deseo hacer rollback sea de revision\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackPreguntaAnterior($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackPreguntaAnterior(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e877dfe80644e79a9b1\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.rollbackPreguntaAnterior.descripcion).toMatch(/Pregunta editada de ejemplo version 9/);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit(\"No Deberia poder hacer rollback de una pregunta que su estado actual sea \" +\n\t\t\"revision y la pregunta que deseo hacer rollback sea rechazada\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackPreguntaAnterior($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackPreguntaAnterior(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e40f9e9cb643415b0f5\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit(\"No Deberia poder hacer rollback de una pregunta que su estado actual sea \" +\n\t\t\"estable y la pregunta que deseo hacer rollback sea rechazada\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackPreguntaAnterior($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackPreguntaAnterior(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e40f9e9cb643415b0f5\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit(\"No Deberia poder hacer rollback de una pregunta que su estado actual sea \" +\n\t\t\"rechazado y la pregunta que deseo hacer rollback sea estable\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackPreguntaAnterior($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackPreguntaAnterior(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e40f9e9cb643415b0f5\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit(\"No Deberia poder hacer rollback de una pregunta si yo no soy propietario de dicha pregunta \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackPreguntaAnterior($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackPreguntaAnterior(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e40f9e9cb643415b0f5\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan497@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.errors.length).toBe(1);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit(\"Deberia poder hacer rollback solamente de la descripcion de la pregunta si yo soy propietario de dicha pregunta\" +\n\t\t\"y ademas esa pregunta tiene un estado de revision, y la pregunta que deseo hacer\" +\n\t\t\"rollback presenta un estado de estable\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackDescripcionPregunta($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackDescripcionPregunta(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\testado\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e40f9e9cb643415b0f5\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.rollbackDescripcionPregunta.descripcion).toMatch(/Pregunta con respuesta de casilla de verificacion/);\n\t\t\t\texpect(response.data.rollbackDescripcionPregunta.estado).toMatch(/revision/);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n\tit(\"Deberia poder hacer rollback solamente de la respuestas de la pregunta si yo soy propietario de dicha pregunta\" +\n\t\t\"y ademas esa pregunta tiene un estado de revision, y la pregunta que deseo hacer\" +\n\t\t\"rollback presenta un estado de estable\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation rollbackRespuestasPregunta($idPregunta: String, $idPreguntaAnterior: String, \n\t\t\t\t\t\t\t\t\t$ownerQuestion: String){\n\t\t\t\t\t\t\trollbackRespuestasPregunta(idPregunta: $idPregunta, idPreguntaAnterior: $idPreguntaAnterior,\n\t\t\t\t\t\t\t\t\townerQuestion: $ownerQuestion){\n\t\t\t\t\t\t\t \t\t\t\t\t_id\n\t\t\t\t\t\t\t \t\t\t\t\tdescripcion\n\t\t\t\t\t\t\t \t\t\t\t\timagen\n\t\t\t\t\t\t\t \t\t\t\t\tidentificador\n\t\t\t\t\t\t\t \t\t\t\t\trespuestas\t\n\t\t\t\t\t\t\t \t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidPregunta: \"5acde1c58cdf5a5284349713\",\n\t\t\t\t\tidPreguntaAnterior: \"5ace3e40f9e9cb643415b0f5\",\n\t\t\t\t\townerQuestion: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.rollbackRespuestasPregunta.descripcion).toMatch(/Pregunta editada/);\n\t\t\t\tdone();\n\t\t\t});\n\n\n\t});\n});\n"]}