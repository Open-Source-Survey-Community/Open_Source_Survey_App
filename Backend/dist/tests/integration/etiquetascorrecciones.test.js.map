{"version":3,"sources":["../../../tests/integration/etiquetascorrecciones.test.js"],"names":["tester","require","describe","self","test","url","contentType","it","done","JSON","stringify","query","variables","etiqueta","usuariopropietario","idioma","color","descripcion","categoria","then","expect","response","status","toBe","success","data","crearNuevaEtiquetaCorrecciones","toMatch","idEtiquetaCorreccion","correoUsuario","editarEtiquetaCorrecciontoPregunta","errors","message"],"mappings":"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","file":"etiquetascorrecciones.test.js","sourcesContent":["/* eslint-disable quotes,no-undef */\n\nconst tester = require('graphql-tester').tester;\n\ndescribe(\"Modelo etiquetas de correcciones, aqui se describe la logica\" +\n\t\"de negocio para las preguntas y encuestas \", function (){\n\tconst self = this;\n\tself.test = tester({\n\t\turl: \"http://127.0.0.1:3660/graphtest\",\n\t\tcontentType: \"application/json\"\n\t});\n\tit(\"Deberia poder crear una nueva etiqueta de correccion \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearNuevaEtiquetaCorrecciones($etiqueta: etiquetaCorreccionesInput!){\n\t\t\t\t\t\tcrearNuevaEtiquetaCorrecciones(etiqueta: $etiqueta){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tetiqueta: {\n\t\t\t\t\t\tusuariopropietario: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tidioma: \"en\",\n\t\t\t\t\t\tcolor: \"#FFFECA\",\n\t\t\t\t\t\tdescripcion: \"es una etiqueta de ejemplo\",\n\t\t\t\t\t\tetiqueta: \"pregunta muy extensa\",\n\t\t\t\t\t\tcategoria: \"pregunta\"\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearNuevaEtiquetaCorrecciones.etiqueta).toMatch(/pregunta muy extensa/);\n\n\t\t\t\tdone();\n\n\t\t\t});\n\t});\n\tit(\"Deberia poder crear otra nueva etiqueta de correccion \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearNuevaEtiquetaCorrecciones($etiqueta: etiquetaCorreccionesInput!){\n\t\t\t\t\t\tcrearNuevaEtiquetaCorrecciones(etiqueta: $etiqueta){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tetiqueta: {\n\t\t\t\t\t\tusuariopropietario: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tidioma: \"en\",\n\t\t\t\t\t\tcolor: \"#FFFECA\",\n\t\t\t\t\t\tdescripcion: \"es otra etiqueta de ejemplo\",\n\t\t\t\t\t\tetiqueta: \"pregunta repetida\",\n\t\t\t\t\t\tcategoria: \"pregunta\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearNuevaEtiquetaCorrecciones.etiqueta).toMatch(/pregunta repetida/);\n\n\t\t\t\tdone();\n\n\t\t\t});\n\t});\n\tit(\"No Deberia poder crear otra nueva etiqueta de correccion, si ya existe en la base de datos \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearNuevaEtiquetaCorrecciones($etiqueta: etiquetaCorreccionesInput!){\n\t\t\t\t\t\tcrearNuevaEtiquetaCorrecciones(etiqueta: $etiqueta){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tetiqueta: {\n\t\t\t\t\t\tusuariopropietario: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tidioma: \"en\",\n\t\t\t\t\t\tcolor: \"#FFFECA\",\n\t\t\t\t\t\tdescripcion: \"es otra etiqueta de ejemplo\",\n\t\t\t\t\t\tetiqueta: \"pregunta repetida\",\n\t\t\t\t\t\tcategoria: \"pregunta\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\n\t\t\t});\n\t});\n\tit(\"No Deberia poder crear otra nueva etiqueta de correccion, si ya existe en la base de datos aun si cambia \" +\n\t\t\"de MINUSCULA A MAYUSCULA  \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearNuevaEtiquetaCorrecciones($etiqueta: etiquetaCorreccionesInput!){\n\t\t\t\t\t\tcrearNuevaEtiquetaCorrecciones(etiqueta: $etiqueta){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tetiqueta: {\n\t\t\t\t\t\tusuariopropietario: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tidioma: \"en\",\n\t\t\t\t\t\tcolor: \"#FFFECA\",\n\t\t\t\t\t\tdescripcion: \"es otra etiqueta de ejemplo\",\n\t\t\t\t\t\tetiqueta: \"Pregunta Repetida\",\n\t\t\t\t\t\tcategoria: \"pregunta\"\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\tdone();\n\n\t\t\t});\n\t});\n\tit(\"Deberia poder crear otra nueva etiqueta de correccion, alternando \" +\n\t\t\"de MINUSCULA A MAYUSCULA  \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearNuevaEtiquetaCorrecciones($etiqueta: etiquetaCorreccionesInput!){\n\t\t\t\t\t\tcrearNuevaEtiquetaCorrecciones(etiqueta: $etiqueta){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tetiqueta: {\n\t\t\t\t\t\tusuariopropietario: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tidioma: \"en\",\n\t\t\t\t\t\tcolor: \"#FFFECA\",\n\t\t\t\t\t\tdescripcion: \"es otra etiqueta de ejemplo\",\n\t\t\t\t\t\tetiqueta: \"Pregunta Repetida de encuesta\",\n\t\t\t\t\t\tcategoria: \"pregunta\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearNuevaEtiquetaCorrecciones.etiqueta).toMatch(/Pregunta Repetida de encuesta/);\n\t\t\t\tdone();\n\n\t\t\t});\n\t});\n\tit(\"Deberia poder crear una nueva etiqueta_correccion de preguntas que nadie ha usado\", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation crearNuevaEtiquetaCorrecciones($etiqueta: etiquetaCorreccionesInput!){\n\t\t\t\t\t\tcrearNuevaEtiquetaCorrecciones(etiqueta: $etiqueta){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tetiqueta: {\n\t\t\t\t\t\tusuariopropietario: \"5ac248c98a3f74223f16895e\",\n\t\t\t\t\t\tidioma: \"en\",\n\t\t\t\t\t\tcolor: \"#FFFECA\",\n\t\t\t\t\t\tdescripcion: \"esta es otra nueva etiqueta de ejemplo que se ha creado\",\n\t\t\t\t\t\tetiqueta: \"pregunta muy extensa y confusa\",\n\t\t\t\t\t\tcategoria: \"pregunta\"\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.crearNuevaEtiquetaCorrecciones.etiqueta).toMatch(/pregunta muy extensa y confusa/);\n\t\t\t\tdone();\n\t\t\t});\n\t});\n\tit(\"Deberia poder editar una etiqueta que he creado, pero nadie ha usado  \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarEtiquetaCorrecciontoPregunta($idEtiquetaCorreccion: String, $color: String,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$descripcion: String, $etiqueta: String,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$correoUsuario: String){\n\t\t\t\t\t\teditarEtiquetaCorrecciontoPregunta(idEtiquetaCorreccion: $idEtiquetaCorreccion, color: $color,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescripcion: $descripcion, etiqueta: $etiqueta,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcorreoUsuario: $correoUsuario){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidEtiquetaCorreccion: \"5ad26cb6dc13797289371c80\",\n\t\t\t\t\tcolor: \"#FAAASS\",\n\t\t\t\t\tdescripcion: \"otra descripcion\",\n\t\t\t\t\tetiqueta: \"etiqueta de ejemplo\",\n\t\t\t\t\tcorreoUsuario: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(true);\n\t\t\t\texpect(response.data.editarEtiquetaCorrecciontoPregunta.etiqueta).toMatch(/etiqueta de ejemplo/);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n\tit(\"Deberia no poder editar una etiqueta que no he creado \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarEtiquetaCorrecciontoPregunta($idEtiquetaCorreccion: String, $color: String,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$descripcion: String, $etiqueta: String,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$correoUsuario: String){\n\t\t\t\t\t\teditarEtiquetaCorrecciontoPregunta(idEtiquetaCorreccion: $idEtiquetaCorreccion, color: $color,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescripcion: $descripcion, etiqueta: $etiqueta,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcorreoUsuario: $correoUsuario){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidEtiquetaCorreccion: \"5ad26cb6dc13797289371c80\",\n\t\t\t\t\tcolor: \"#FAAASS\",\n\t\t\t\t\tdescripcion: \"otra descripcion\",\n\t\t\t\t\tetiqueta: \"etiqueta de ejemplo\",\n\t\t\t\t\tcorreoUsuario: \"kevinandresortizmerchan@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.errors[0].message).toMatch(/you can't edit this tag because you are not the owner/);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n\tit(\"Deberia no poder editar una etiqueta de correccion ya que otros \" +\n\t\t\"usuarios la estan usando \", function (done) {\n\t\tself\n\t\t\t.test(JSON.stringify({\n\t\t\t\tquery: `mutation editarEtiquetaCorrecciontoPregunta($idEtiquetaCorreccion: String, $color: String,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$descripcion: String, $etiqueta: String,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$correoUsuario: String){\n\t\t\t\t\t\teditarEtiquetaCorrecciontoPregunta(idEtiquetaCorreccion: $idEtiquetaCorreccion, color: $color,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescripcion: $descripcion, etiqueta: $etiqueta,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcorreoUsuario: $correoUsuario){\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\tetiqueta\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t}`,\n\t\t\t\tvariables: {\n\t\t\t\t\tidEtiquetaCorreccion: \"5ad224fcd47c4b51302491ce\",\n\t\t\t\t\tcolor: \"#FAAASS\",\n\t\t\t\t\tdescripcion: \"otra descripcion\",\n\t\t\t\t\tetiqueta: \"etiqueta de ejemplo\",\n\t\t\t\t\tcorreoUsuario: \"kevinandresortizmerchan111@gmail.com\"\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.then(response => {\n\t\t\t\texpect(response.status).toBe(200);\n\t\t\t\texpect(response.success).toBe(false);\n\t\t\t\texpect(response.errors[0].message).toMatch(/you can't edit this tag, because other users are using the same tag/);\n\t\t\t\tdone();\n\t\t\t});\n\t\t\n\t});\n});"]}